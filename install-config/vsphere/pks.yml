product-name: pivotal-container-service
product-properties:
  .pivotal-container-service.pks_tls:
    value:
      cert_pem: ((pks_api_cert.public_key))
      private_key_pem: ((pks_api_cert.private_key))
  .properties.cloud_provider:
    selected_option: vsphere
    value: vSphere
  .properties.cloud_provider.vsphere.vcenter_dc:
    value: ((nested_vcenter.datacenter)) #VS
  .properties.cloud_provider.vsphere.vcenter_ds:
    value: ((nested_clusters.compute.nested_hosts_disks.1.create_datastore_name))-((foundation)) #VS
  .properties.cloud_provider.vsphere.vcenter_ip:
    value: ((nested_vcenter.host_name)) #VS
  .properties.cloud_provider.vsphere.vcenter_master_creds:
    value:
      identity: ((nested_vcenter_credentials.username))
      password: ((nested_vcenter_credentials.password))
  .properties.cloud_provider.vsphere.vcenter_vms:
    value: ((vcenter_vms_folder))
  .properties.log_sink_resources_deploy:
    value: true
  .properties.metric_sink_resources_deploy:
    value: true
  .properties.network_selector:
    selected_option: nsx
    value: nsx
  .properties.network_selector.nsx.cloud-config-dns:
    value: ((dns1)) #VS
  .properties.network_selector.nsx.floating-ip-pool-ids:
    value: ((pks_floating_ip_pool_id))
  .properties.network_selector.nsx.ip-block-id:
    value: ((pks_pods_ip_block_id))
  # commenting out for PKS 1.8
  # .properties.network_selector.nsx.lb_size_large_supported:
  #   value: true
  # .properties.network_selector.nsx.lb_size_medium_supported:
  #   value: true
  .properties.network_selector.nsx.nat_mode:
    value: true
  .properties.network_selector.nsx.ncp-ha-heartbeat-period:
    value: 3
  .properties.network_selector.nsx.ncp-ha-master-timeout:
    value: 9
  .properties.network_selector.nsx.ncp-ha-update-timeout:
    value: 3
  .properties.network_selector.nsx.network_automation:
    value: true
  .properties.network_selector.nsx.nodes-ip-block-id:
    value: ((pks_nodes_ip_block_id))
  .properties.network_selector.nsx.nsx-t-ca-cert:
    value: ((nsx_machine_cert.public_key))
  .properties.network_selector.nsx.nsx-t-host:
    value: ((nsxt_host))
  .properties.network_selector.nsx.nsx-t-insecure:
    value: true
  .properties.network_selector.nsx.nsx-t-superuser-certificate:
    value:
      cert_pem: ((pks_nsx_super_user.public_key))
      private_key_pem: ((pks_nsx_super_user.private_key))
  .properties.network_selector.nsx.service_cluster_cidr:
    value: ((nsx_services_cidr))
  .properties.network_selector.nsx.t0-router-id:
    value: ((tier_0_id))
  .properties.network_selector.nsx.vcenter_cluster:
    value: ((nested_hosts.esx1.nested_cluster))
  .properties.pks-vrli:
    selected_option: disabled
    value: disabled
  .properties.pks-vrops:
    selected_option: disabled
    value: disabled
  .properties.pks_api_hostname:
    value: ((pks_api_hostname))
  .properties.plan1_selector:
    selected_option: active
    value: Plan Active
  .properties.plan1_selector.active.allow_privileged_containers:
    value: false
  .properties.plan1_selector.active.description:
    value: 'Example: This plan will configure a lightweight kubernetes cluster. Not
      recommended for production workloads.'
  .properties.plan1_selector.active.master_az_placement:
    value:
    - PKS-AZ1
  .properties.plan1_selector.active.master_instances:
    value: 1
  .properties.plan1_selector.active.max_worker_instances:
    value: 50
  .properties.plan1_selector.active.name:
    value: small
  .properties.plan1_selector.active.worker_az_placement:
    value:
    - PKS-AZ1
  .properties.plan1_selector.active.worker_instances:
    value: 3
  .properties.plan2_selector:
    selected_option: inactive
    value: Plan Inactive
  .properties.plan3_selector:
    selected_option: inactive
    value: Plan Inactive
  .properties.plan4_selector:
    selected_option: inactive
    value: Plan Inactive
  .properties.plan5_selector:
    selected_option: inactive
    value: Plan Inactive
  .properties.plan6_selector:
    selected_option: inactive
    value: Plan Inactive
  .properties.plan7_selector:
    selected_option: inactive
    value: Plan Inactive
  .properties.plan8_selector:
    selected_option: inactive
    value: Plan Inactive
  .properties.plan9_selector:
    selected_option: inactive
    value: Plan Inactive
  .properties.plan10_selector:
    selected_option: inactive
    value: Plan Inactive
  .properties.proxy_selector:
    selected_option: disabled
    value: Disabled
  .properties.syslog_selector:
    selected_option: disabled
    value: disabled
  .properties.telemetry_installation_purpose_selector:
    selected_option: not_provided
    value: not_provided
  .properties.telemetry_selector:
    selected_option: disabled
    value: disabled
  .properties.uaa:
    selected_option: internal
    value: internal
  .properties.oidc_selector:
    selected_option: disabled
    value: disabled
  .properties.uaa_pks_cli_access_token_lifetime:
    value: 600
  .properties.uaa_pks_cli_refresh_token_lifetime:
    value: 21600
  .properties.wavefront:
    selected_option: disabled
    value: disabled
  .properties.worker_max_in_flight:
    value: 1
network-properties:
  network:
    name: ((management_subnet_name))
  other_availability_zones:
  - name: PKS-AZ1
  service_network:
    name: ((management_subnet_name))
  singleton_availability_zone:
    name: PKS-AZ1
resource-config:
  pivotal-container-service:
    instances: automatic
    persistent_disk:
      size_mb: automatic
    instance_type:
      id: automatic
errand-config:
  delete-all-clusters:
    pre-delete-state: true
  pks-nsx-t-precheck:
    post-deploy-state: false
  smoke-tests:
    post-deploy-state: false
  upgrade-all-service-instances:
    post-deploy-state: false
  wavefront-alert-creation:
    post-deploy-state: false
  wavefront-alert-deletion:
    pre-delete-state: false